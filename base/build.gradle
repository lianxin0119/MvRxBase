apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.jakewharton.butterknife'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        ndk {
            abiFilters 'armeabi-v7a' //, 'arm64-v8a'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.android.javaSourceCompatibility
        targetCompatibility rootProject.ext.android.javaTargetCompatibility
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    kapt {
        correctErrorTypes = true
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.core:core-ktx:1.3.2'

    api rootProject.ext.dependencies.kotlinVerJDK
    api rootProject.ext.dependencies.appcompat
    api rootProject.ext.dependencies.recycleview
    api rootProject.ext.dependencies.cardview
    api rootProject.ext.dependencies.constraintLayout

    api(rootProject.ext.dependencies.glide) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies.glide_okhttp) {
        exclude group: "okhttp"
    }
    kapt rootProject.ext.dependencies.glide_compiler

    api rootProject.ext.dependencies.kodein
    api rootProject.ext.dependencies.kodein_android
    api rootProject.ext.dependencies.kodein_android_support

    api rootProject.ext.dependencies.rxjava2
    api(rootProject.ext.dependencies.rxAndroid) {
        exclude module: "rxjava"
    }
    api(rootProject.ext.dependencies.rxKotlin) {
        exclude module: "rxjava"
    }

    api(rootProject.ext.dependencies.rxlifecycle) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
        exclude module: 'lifecycle'
    }
    api(rootProject.ext.dependencies.rxlifecycle_android) {
        exclude module: 'rxlifecycle'
        exclude module: 'lifecycle'
    }
    api(rootProject.ext.dependencies.rxlifecycle_android_lifecycle) {
        exclude module: 'lifecycle'
        exclude module: 'rxlifecycle'
    }
    api(rootProject.ext.dependencies.rxlifecycle_components) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
        exclude module: 'lifecycle'
    }
    api(rootProject.ext.dependencies.rxlifecycle_kotlin) {
        exclude module: 'rxlifecycle'
        exclude module: 'lifecycle'
    }
    api(rootProject.ext.dependencies.rxlifecycle_kotlin_lifecycle) {
        exclude module: 'lifecycle'
        exclude module: 'rxlifecycle'
    }

    api(rootProject.ext.dependencies.rxpermission) {
        exclude group: "com.android.support"
        exclude module: "rxjava"
        exclude module: "support-annotations"
    }
    api(rootProject.ext.dependencies.rxBinding) {
        exclude group: "com.android.support"
        exclude module: "rxjava"
        exclude module: "support-annotations"
    }
    api(rootProject.ext.dependencies.rxCache) {
        exclude group: "com.android.support"
        exclude module: "rxjava"
        exclude module: "support-annotations"
    }
    api(rootProject.ext.dependencies.rxCache_gson) {
        exclude group: "com.android.support"
        exclude module: "rxjava"
        exclude module: "support-annotations"
    }

    api rootProject.ext.dependencies.lifecycle
    api(rootProject.ext.dependencies.lifecycle_common_java8) {
        exclude module: 'lifecycle'
    }
    api(rootProject.ext.dependencies.lifecycle_reactivestreams) {
        exclude module: 'lifecycle'
    }
    api(rootProject.ext.dependencies.lifecycle_livedata) {
        exclude module: 'lifecycle'
    }
    api(rootProject.ext.dependencies.lifecycle_viewmodel) {
        exclude module: 'lifecycle'
    }
    kapt rootProject.ext.dependencies.lifecycle_processor

    api rootProject.ext.dependencies.okhttp3
    api(rootProject.ext.dependencies.okhttp3_log) {
        exclude module: "okhttp"
    }

    api(rootProject.ext.dependencies.retrofit) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    api(rootProject.ext.dependencies.retrofit_converter_gson) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    api(rootProject.ext.dependencies.retrofit_adapter_rxjava2) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api(rootProject.ext.dependencies.retrofit_converter_scalars) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }

    api rootProject.ext.dependencies.gson
    api rootProject.ext.dependencies.multidex
    api rootProject.ext.dependencies.mmkv
    api(rootProject.ext.dependencies.utilcode) {
        exclude module: 'gson'
    }

    //mvrx
    api rootProject.ext.dependencies.mvrx

    //epoxy
    api rootProject.ext.dependencies.epoxy
    kapt rootProject.ext.dependencies.epoxyProcessor
}